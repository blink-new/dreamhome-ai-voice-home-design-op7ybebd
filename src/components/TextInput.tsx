import React, { useState } from 'react'
import { Button } from './ui/button'
import { Textarea } from './ui/textarea'
import { Send, Lightbulb, Home, Sparkles } from 'lucide-react'

interface TextInputProps {
  onTextSubmit: (text: string) => void
  selectedLanguage: string
}

const suggestions = {
  en: [
    "I want a 3-bedroom house with a large living room and modern kitchen",
    "Design a cozy 2BHK apartment with balcony and study room", 
    "Create a villa with swimming pool, garden, and 4 bedrooms",
    "I need a small studio apartment with efficient space utilization",
    "Design a duplex house with parking and terrace garden",
    "Create an open-plan living space with kitchen island"
  ],
  hi: [
    "‡§Æ‡•Å‡§ù‡•á ‡§è‡§ï ‡§¨‡§°‡§º‡•á ‡§≤‡§ø‡§µ‡§ø‡§Ç‡§ó ‡§∞‡•Ç‡§Æ ‡§î‡§∞ ‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§∞‡§∏‡•ã‡§à ‡§ï‡•á ‡§∏‡§æ‡§• 3 ‡§¨‡•á‡§°‡§∞‡•Ç‡§Æ ‡§ï‡§æ ‡§ò‡§∞ ‡§ö‡§æ‡§π‡§ø‡§è",
    "‡§¨‡§æ‡§≤‡§ï‡§®‡•Ä ‡§î‡§∞ ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡§ï‡•ç‡§∑ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§Ü‡§∞‡§æ‡§Æ‡§¶‡§æ‡§Ø‡§ï 2BHK ‡§Ö‡§™‡§æ‡§∞‡•ç‡§ü‡§Æ‡•á‡§Ç‡§ü ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç",
    "‡§∏‡•ç‡§µ‡§ø‡§Æ‡§ø‡§Ç‡§ó ‡§™‡•Ç‡§≤, ‡§¨‡§ó‡•Ä‡§ö‡§æ ‡§î‡§∞ 4 ‡§¨‡•á‡§°‡§∞‡•Ç‡§Æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§µ‡§ø‡§≤‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç",
    "‡§Æ‡•Å‡§ù‡•á ‡§ï‡•Å‡§∂‡§≤ ‡§∏‡•ç‡§•‡§æ‡§® ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ ‡§∏‡•ç‡§ü‡•Ç‡§°‡§ø‡§Ø‡•ã ‡§Ö‡§™‡§æ‡§∞‡•ç‡§ü‡§Æ‡•á‡§Ç‡§ü ‡§ö‡§æ‡§π‡§ø‡§è",
    "‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§ó ‡§î‡§∞ ‡§õ‡§§ ‡§¨‡§ó‡•Ä‡§ö‡•á ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§°‡•Å‡§™‡•ç‡§≤‡•á‡§ï‡•ç‡§∏ ‡§ò‡§∞ ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç",
    "‡§ï‡§ø‡§ö‡§® ‡§Ü‡§á‡§≤‡•à‡§Ç‡§° ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§ñ‡•Å‡§≤‡§æ ‡§≤‡§ø‡§µ‡§ø‡§Ç‡§ó ‡§∏‡•ç‡§™‡•á‡§∏ ‡§¨‡§®‡§æ‡§è‡§Ç"
  ]
}

export function TextInput({ onTextSubmit, selectedLanguage }: TextInputProps) {
  const [text, setText] = useState('')
  const [showSuggestions, setShowSuggestions] = useState(true)

  const handleSubmit = () => {
    if (text.trim()) {
      onTextSubmit(text.trim())
      setText('')
    }
  }

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSubmit()
    }
  }

  const handleSuggestionClick = (suggestion: string) => {
    setText(suggestion)
    setShowSuggestions(false)
  }

  const currentSuggestions = suggestions[selectedLanguage as keyof typeof suggestions] || suggestions.en

  const placeholder = selectedLanguage === 'hi' 
    ? '‡§Ö‡§™‡§®‡•á ‡§∏‡§™‡§®‡•ã‡§Ç ‡§ï‡•á ‡§ò‡§∞ ‡§ï‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§µ‡§∞‡•ç‡§£‡§® ‡§ï‡§∞‡•á‡§Ç... ‡§ú‡•à‡§∏‡•á: "‡§Æ‡•Å‡§ù‡•á 3 ‡§¨‡•á‡§°‡§∞‡•Ç‡§Æ ‡§ï‡§æ ‡§ò‡§∞ ‡§ö‡§æ‡§π‡§ø‡§è ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§¨‡§°‡§º‡§æ ‡§≤‡§ø‡§µ‡§ø‡§Ç‡§ó ‡§∞‡•Ç‡§Æ, ‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§∞‡§∏‡•ã‡§à ‡§î‡§∞ ‡§õ‡•ã‡§ü‡§æ ‡§ó‡§æ‡§∞‡•ç‡§°‡§® ‡§π‡•ã‡•§"'
    : 'Describe your dream home in detail... e.g., "I want a 3-bedroom house with a large living room, modern kitchen, and a small garden."'

  return (
    <div className="space-y-4">
      {/* Smart Suggestions */}
      {showSuggestions && (
        <div className="p-4 bg-gradient-to-r from-amber-50 to-orange-50 rounded-lg border border-amber-200">
          <div className="flex items-center gap-2 mb-3">
            <Sparkles className="w-4 h-4 text-amber-600" />
            <span className="font-medium text-amber-900">
              {selectedLanguage === 'hi' ? '‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§∏‡•Å‡§ù‡§æ‡§µ:' : 'Smart Suggestions:'}
            </span>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
            {currentSuggestions.slice(0, 4).map((suggestion, index) => (
              <Button
                key={index}
                variant="outline"
                size="sm"
                onClick={() => handleSuggestionClick(suggestion)}
                className="justify-start text-left h-auto p-3 hover:bg-amber-100 border-amber-300 text-amber-800"
              >
                <Home className="w-4 h-4 mr-2 flex-shrink-0" />
                <span className="text-sm line-clamp-2">{suggestion}</span>
              </Button>
            ))}
          </div>
        </div>
      )}

      {/* Text Input Area */}
      <div className="space-y-3">
        <Textarea
          value={text}
          onChange={(e) => setText(e.target.value)}
          onKeyPress={handleKeyPress}
          placeholder={placeholder}
          className="min-h-[120px] resize-none text-base"
          onFocus={() => setShowSuggestions(false)}
        />
        
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-4 text-sm text-gray-600">
            <span>{text.length} characters</span>
            <button
              onClick={() => setShowSuggestions(!showSuggestions)}
              className="flex items-center gap-1 hover:text-amber-600 transition-colors"
            >
              <Lightbulb className="w-4 h-4" />
              {selectedLanguage === 'hi' ? '‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç' : 'Show suggestions'}
            </button>
          </div>
          
          <Button 
            onClick={handleSubmit}
            disabled={!text.trim()}
            className="bg-indigo-600 hover:bg-indigo-700"
          >
            <Send className="w-4 h-4 mr-2" />
            {selectedLanguage === 'hi' ? '‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§¨‡§®‡§æ‡§è‡§Ç' : 'Generate Design'}
          </Button>
        </div>
      </div>

      {/* Input Tips */}
      <div className="p-4 bg-gray-50 rounded-lg">
        <h4 className="font-medium mb-2 text-gray-800">
          {selectedLanguage === 'hi' ? 'üí° ‡§¨‡•á‡§π‡§§‡§∞ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ü‡§ø‡§™‡•ç‡§∏:' : 'üí° Tips for better results:'}
        </h4>
        <ul className="text-sm text-gray-600 space-y-1">
          <li>‚Ä¢ {selectedLanguage === 'hi' ? '‡§ï‡§Æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∏‡•ç‡§™‡§∑‡•ç‡§ü ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§¨‡§§‡§æ‡§è‡§Ç' : 'Clearly mention number of rooms'}</li>
          <li>‚Ä¢ {selectedLanguage === 'hi' ? '‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§è‡§Ç ‡§ú‡•à‡§∏‡•á ‡§ó‡§æ‡§∞‡•ç‡§°‡§®, ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§â‡§≤‡•ç‡§≤‡•á‡§ñ ‡§ï‡§∞‡•á‡§Ç' : 'Include special features like garden, parking'}</li>
          <li>‚Ä¢ {selectedLanguage === 'hi' ? '‡§ò‡§∞ ‡§ï‡§æ ‡§Ü‡§ï‡§æ‡§∞ ‡§î‡§∞ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§¨‡§§‡§æ‡§è‡§Ç' : 'Describe house size and style preferences'}</li>
          <li>‚Ä¢ {selectedLanguage === 'hi' ? '‡§ú‡§ø‡§§‡§®‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§¨‡§§‡§æ‡§è‡§Ç‡§ó‡•á, ‡§â‡§§‡§®‡§æ ‡§¨‡•á‡§π‡§§‡§∞ ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ' : 'More details = better design results'}</li>
        </ul>
      </div>
    </div>
  )
}